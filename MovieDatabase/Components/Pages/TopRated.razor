@page "/TopRated"
@using Models
@using MovieDatabase.Services
@inject IMovieService MovieService

<PageTitle>Home</PageTitle>


@if (isLoading)
{
    <p>Loading...</p>
}
else 
{
    <div class="movie-list">
        @foreach (var movie in trendingResult)
        {
            <div class="movie">
                <img src="@movie.FullPosterUrl" alt="@movie.MovieTitle" class="movie-cover" />
                <div class="movie-details">
                    <p class="text-sm font-semibold">@movie.MovieTitle</p>
                    <p class="text-sm text-gray-700">@movie.ReleaseDate</p>
                    @* <p class="text-sm">@movie.Overview</p>
                    <p>PosterPath: @movie.PosterPath</p>  *@
                    @* <p>FullPosterUrl: @movie.FullPosterUrl</p> *@
                </div>


            </div>
        }
    </div>
}



@code{
    private List<Movie> trendingResult = new();
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        try
        {
            trendingResult = await MovieService.TopRatedMoviesAsync();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"API Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}